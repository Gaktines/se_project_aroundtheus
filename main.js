!function(){"use strict";class e{constructor(e){let{cardData:t,cardSelector:r,handleCardClick:o}=e;this._name=t.name,this._link=t.link,this._cardSelector=r,this._cardTemplateInput=document.querySelector("#card-template").content.firstElementChild,this._cardElement=this._cardTemplateInput.cloneNode(!0),this._handleCardClick=o,this._modalDeleteButton=document.querySelector("#modal-delete-btn"),this.likes=[]}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__button"),this._likeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._deleteBtn=this._cardElement.querySelector("#card-delete-button"),this._deleteBtn.addEventListener("click",(()=>{this._handleDeleteBtn()})),this._cardElement.querySelector("#card-image").addEventListener("click",(()=>this._handleCardClick({name:this._name,link:this._link}))),this._modalDeleteButton.addEventListener("click",(()=>{handleModalDeleteButton()}))}setLikesInfo(){this._likeButton.addEventListener("click",(()=>(this.likes=this.likes+1,this.likes)))}_updateLikesView(){this._cardElement.querySelector(".card__number").textContent=this.likes.length}_handleLikeIcon=()=>{this._likeButton.classList.toggle("card__button_active")};_handleDeleteBtn(){document.querySelector("#modal-delete").classList.add(".modal_opened")}handleModalDeleteButton(){this._cardElement.remove(),this._cardElement=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getCard(){return this._cardElement=this._getTemplate(),this._cardElement.querySelector("#card-image").src=this._link,this._cardElement.querySelector("#card-name").textContent=this._name,this._cardElement.querySelector("#card-image").alt=this._name,this._setEventListeners(),this._updateLikesView(),this.setLikesInfo(),this._cardElement}}class t{constructor(e,t){this._formSelector=".modal__form",this._inputSelector=".modal__input",this._submitButtonSelector=".modal__button",this._inactiveButtonClass="modal__button_disabled",this._inputErrorClass="modal__input_type_error",this._errorClass="modal__error_visible",this._form=t,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._saveButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageElement.textContent=e.validationMessage,this._errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageElement.textContent="",this._errorMessageElement.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}toggleButtonState(e,t){if(this._hasInvalidInput())return this._saveButton.classList.add(this._inactiveButtonClass),void(this._saveButton.disabled=!0);this._saveButton.classList.remove(this._inactiveButtonClass),this._saveButton.disabled=!1}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class r{constructor(e,t){let{items:r,renderer:o}=e;this.items=r,this.renderer=o,this._container=document.querySelector(t)}renderItems(){this.items.forEach(this.renderer)}addItem(e){this._container.prepend(e)}}class o{constructor(e){let{popupSelector:t}=e;this._modalElement=document.querySelector(t),this.modalCloseButton=this._modalElement.querySelector("#modal-close-button")}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{27===e.which&&this.close()};setEventListeners(){this._modalElement.addEventListener("click",this.closeModalOnRemoteClick)}closeModalOnRemoteClick=e=>{(e.target===e.currentTarget||e.target.classList.contains("modal__close"))&&this.close(e.target)}}class s extends o{constructor(e){let{popupSelector:t,handleFormSubmit:r}=e;super({popupSelector:t}),this._modalForm=this._modalElement.querySelector(".modal__form"),this._handleFormSubmit=r}_getInputValues(){const e={};return this._modalForm.querySelectorAll(".modal__input").forEach((t=>{const r=t.name,o=t.value;e[r]=o})),e}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}open(){super.open()}close(){this._modalForm.reset(),super.close()}}const n=document.querySelector("#profile-edit-button"),a=document.querySelector("#profile-edit-modal"),i=(document.querySelector("#profile-modal-close-button"),document.querySelector("#profile-title"),document.querySelector("#profile-subheading"),document.querySelector("#profile-modal-title")),l=document.querySelector("#modal-subheading"),d=(a.querySelector("#profile-modal-form"),document.querySelector("#card-template").content.firstElementChild),c=document.querySelector("#add-card-edit-modal"),u=(document.querySelector("#add-card-modal-close-button"),document.querySelector("#profile-add-button")),h=(document.querySelector("#add-card-modal-title"),document.querySelector("#add-card-link"),c.querySelector("#add-card-modal-form"),document.querySelector("#card-list"),document.querySelector("#modal-close-button"),{formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),m=new t(h,a),_=new t(h,c);m.enableValidation(),_.enableValidation();const p=new class{constructor(e){let{name:t,subheading:r}=e;this.name=document.querySelector(t),this.subheading=document.querySelector(r)}getUserInfo(){return{name:this.name.textContent,subheading:this.subheading.textContent}}setUserInfo(e){let{name:t,subheading:r}=e;this.name.textContent=t,this.subheading.textContent=r}}({name:".profile__title",subheading:".profile__subheading"}),S=new s({popupSelector:"#profile-edit-modal",handleFormSubmit:function(e){p.setUserInfo(e),S.close()}});S.setEventListeners();const b=new s({popupSelector:"#add-card-edit-modal",handleFormSubmit:function(e){E(e),b.close()}});b.setEventListeners();const f=new class extends o{constructor(e){let{popupSelector:t}=e;super({popupSelector:t})}open(e){const t=this._modalElement.querySelector("#modal-image");this._modalElement.querySelector("#modal-caption").textContent=e.name,t.src=e.link,t.alt=e.name,super.open()}}({popupSelector:"#image-modal"});function E(t){const r=new e({cardData:t,cardSelector:"#card-template",handleCardClick:e=>{let{name:t,link:r}=e;f.open({name:t,link:r})}});y.addItem(r.getCard())}f.setEventListeners(),d.cloneNode(!0).querySelector("#card-image"),n.addEventListener("click",(()=>{const e=p.getUserInfo();i.value=e.name,l.value=e.subheading,S.open()})),u.addEventListener("click",(()=>{_.toggleButtonState(),b.open()}));const v=new class{constructor(e,t){this.name=e,this.link=t}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch("https://around.nomoreparties.co/v1/group-12/cards",{method:"Get",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5"}}).then((e=>e.json())).catch((e=>{console.error(e)}))}getUserInfo(){return fetch("https://around.nomoreparties.co/v1/group-12/users/me",{method:"PATCH",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5","Content-Type":"application/json"},body:JSON.stringify({name:"Marie SkÅ‚odowska Curie",about:"Physicist and Chemist"})})}addCard(){return fetch("https://around.nomoreparties.co/v1/groupId/cards",{method:"Post",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5","Content-Type":"application/json"}}).then((e=>e.json()))}deleteCard(){return{method:"Delete",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5"}}.then((()=>deleteCard)),!0}addCardLike(){return fetch("https://around.nomoreparties.co/v1/group-12/cards/likes/cardId ",{method:"Put",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5"}}).then((e=>e.json()))}removeCardLike(){return fetch("https://around.nomoreparties.co/v1/groupId/cards/likes/cardId",{method:"Delete",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5"}}).then((e=>e.json()))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5","Content-Type":"application/json"}});let y;v.getAppInfo().then((e=>{let[t,o]=e;y=new r({items:t,renderer:E},".cards__list"),y.renderItems()})),v.deleteCard()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,