!function(){"use strict";class e{constructor(e){let{cardData:t,cardSelector:r,_handleCardClick:o,handleDeleteClick:s,processLikeClick:n,userId:i}=e;this._cardId=t._id,this._name=t.name,this._link=t.link,this._cardSelector=r,this._cardTemplateInput=document.querySelector("#card-template").content.firstElementChild,this._cardElement=this._cardTemplateInput.cloneNode(!0),this._handleCardClick=o,this._handleDeleteClick=s,this._userId=i,this._currentUserId=t.owner._id,this._processLikeClick=n,this._modalDeleteButton=document.querySelector("#modal-delete-btn"),this._likes=t.likes}_setEventListeners(){this._likeButton=this._cardElement.querySelector(".card__button"),this._likeButton.addEventListener("click",(()=>{this._processLikeClick(this)})),this._deleteBtn.addEventListener("click",(()=>{this._handleDeleteClick(this._cardId)})),this._cardElement.querySelector("#card-image").addEventListener("click",(()=>this._handleCardClick({name:this._name,link:this._link})))}setLikesInfo(e){this._likes=e,this._updateLikesView()}_updateLikesView(){this._cardElement.querySelector(".card__number").textContent=this._likes.length}handleModalDeleteButton(){this._cardElement.remove()}handleDeleteButton(){this._deleteBtn=this._cardElement.querySelector("#card-delete-button"),console.log(this._userId),this._currentUserId!=this._userId&&this._deleteBtn.remove()}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getCard(){return this._cardElement=this._getTemplate(),this._cardElement.querySelector("#card-image").src=this._link,this._cardElement.querySelector("#card-name").textContent=this._name,this._cardElement.querySelector("#card-image").alt=this._name,this.handleDeleteButton(),this._setEventListeners(),this._updateLikesView(),this._cardElement}}class t{constructor(e,t){this._formSelector=".modal__form",this._inputSelector=".modal__input",this._submitButtonSelector=".modal__button",this._inactiveButtonClass="modal__button_disabled",this._inputErrorClass="modal__input_type_error",this._errorClass="modal__error_visible",this._form=t,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._saveButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageElement.textContent=e.validationMessage,this._errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){console.log(`#${e.id}-error`),this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageElement.textContent="",this._errorMessageElement.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputList.every((e=>e.validity.valid))}toggleButtonState(e,t){if(this._hasInvalidInput())return this._saveButton.classList.add(this._inactiveButtonClass),void(this._saveButton.disabled=!0);this._saveButton.classList.remove(this._inactiveButtonClass),this._saveButton.disabled=!1}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class r{constructor(e,t){let{items:r,renderer:o}=e;this.items=r,this.renderer=o,this._container=document.querySelector(t)}renderItems(){this.items.forEach(this.renderer)}addItem(e){this._container.prepend(e)}}class o{constructor(e){let{popupSelector:t}=e;this._modalElement=document.querySelector(t),this.modalCloseButton=this._modalElement.querySelector("#modal-close-button")}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{27===e.which&&this.close()};setEventListeners(){this._modalElement.addEventListener("click",this.closeModalOnRemoteClick)}closeModalOnRemoteClick=e=>{(e.target===e.currentTarget||e.target.classList.contains("modal__close"))&&this.close(e.target)}}class s extends o{constructor(e){let{popupSelector:t,handleFormSubmit:r}=e;super({popupSelector:t}),this._modalForm=this._modalElement.querySelector(".modal__form"),this._handleFormSubmit=r}_getInputValues(){const e={};return this._modalForm.querySelectorAll(".modal__input").forEach((t=>{const r=t.name,o=t.value;e[r]=o})),e}setLoading(e){const t=this._modalElement.querySelector(".modal__button");t.textContent=e?"Saving":t.textContent}setEventListeners(){super.setEventListeners(),this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}open(){super.open()}close(){this._modalForm.reset(),super.close()}setSubmitAction(e){this._handleFormSubmit=e}}const n=document.querySelector("#profile-edit-button"),i=document.querySelector("#profile-edit-modal"),a=(document.querySelector("#profile-modal-close-button"),document.querySelector("#profile-title"),document.querySelector("#profile-subheading"),document.querySelector("#profile-modal-title")),l=document.querySelector("#modal-subheading"),d=(i.querySelector("#profile-modal-form"),document.querySelector("#card-template").content.firstElementChild,document.querySelector("#add-card-edit-modal")),c=(document.querySelector("#add-card-modal-close-button"),document.querySelector("#profile-add-button")),u=(document.querySelector("#add-card-modal-title"),document.querySelector("#add-card-link"),d.querySelector("#add-card-modal-form"),document.querySelector("#card-list"),document.querySelector("#modal-close-button"),document.querySelector("#modal-delete")),m={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},h=document.querySelector(".profile__image-button"),_=document.querySelector(".modal__button_save"),p=document.querySelector("#modal-profile-image"),S=new t(m,i),b=new t(m,d);S.enableValidation(),b.enableValidation();const g=new class{constructor(e){let{name:t,subheading:r}=e;this.name=document.querySelector(t),this.subheading=document.querySelector(r)}getUserInfo(){return{name:this.name.textContent,subheading:this.subheading.textContent}}setUserInfo(e){let{name:t,subheading:r}=e;this.name.textContent=t,this.subheading.textContent=r}}({name:".profile__title",subheading:".profile__subheading"}),E=new s({popupSelector:"#profile-edit-modal",handleFormSubmit:function(e){E.setLoading(!0),g.setUserInfo(e),E.setLoading(!1),E.close()}});E.setEventListeners();const f=new s({popupSelector:"#add-card-edit-modal",handleFormSubmit:function(e){f.setLoading(!0),I.addCard(e).then((e=>{f.setLoading(!1),C(e),f.close()}))}});f.setEventListeners();const v=new class extends o{constructor(e){let{popupSelector:t}=e;super({popupSelector:t})}open(e){const t=this._modalElement.querySelector("#modal-image");this._modalElement.querySelector("#modal-caption").textContent=e.name,t.src=e.link,t.alt=e.name,super.open()}}({popupSelector:"#image-modal"});v.setEventListeners();const k=new s({popupSelector:"#modal-delete",handleFormSubmit:()=>{}});k.setEventListeners();const L=new s({popupSelector:"#modal-profile-image",handleFormSubmit:q});function y(e){this._likeButton.classList.toggle("card__button_active"),isLiked?I.removeCardLike(e._cardId).then((t=>{e.setLikesInfo(t.likes)})).catch((e=>{console.error(e)})):I.addCardLike(e._cardId).then((t=>{e.setLikesInfo(t.likes)})).catch((e=>{console.error(e)}))}function C(t){const r=new e({cardData:t,cardSelector:"#card-template",_handleCardClick:e=>{let{name:t,link:r}=e;v.open({name:t,link:r})},handleDeleteClick:e=>{u.classList.add("modal_opened"),k.setSubmitAction((()=>{I.deleteCard(e).then((e=>{k.setLoading(!0),r.handleModalDeleteButton(),k.setLoading(!1),u.classList.remove("modal_opened")})).catch((e=>{console.error(e)}))}))},processLikeClick:y,userId:w});B.addItem(r.getCard())}function q(){L.setLoading(!0);const e=document.querySelector(".profile__image"),t=document.querySelector("#profile-image-link");e.src=t.value,L.setLoading(!1),L.close()}L.setEventListeners(),new t(m,p).enableValidation(),h.addEventListener("click",(()=>{L.open()})),_.addEventListener("click",(()=>{q()})),n.addEventListener("click",(()=>{const e=g.getUserInfo();a.value=e.name,l.value=e.subheading,E.open()})),c.addEventListener("click",(()=>{b.toggleButtonState(),f.open()}));const I=new class{constructor(e,t){this.name=e,this.link=t}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return this._request("https://around.nomoreparties.co/v1/group-12/cards",{method:"GET",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5"}})}getUserInfo(){return this._request("https://around.nomoreparties.co/v1/group-12/users/me",{method:"GET",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5","Content-Type":"application/json"}})}updateUserInfo(e,t){return this._request("https://around.nomoreparties.co/v1/group-12/users/me",{method:"GET",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5","Content-Type":"application/json"},body:JSON.stringify({name:e,about:t})})}addCard(e){let{name:t,link:r}=e;return this._request("https://around.nomoreparties.co/v1/group-12/cards",{method:"POST",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5","Content-Type":"application/json"},body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this._request(`https://around.nomoreparties.co/v1/group-12/cards/${e}`,{method:"DELETE",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5"}})}handleDeleteButton(){this.deleteBtnModal=document.querySelector("#modal-delete"),this.deleteBtnModal.classList.add(".modal_opened")}handleCardLikes(){return Promise.all([this.addCardLike(),this.removeCardLike()])}addCardLike(e){return this._request(`https://around.nomoreparties.co/v1/group-12/cards/likes/${e}`,{method:"PUT",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5"}})}removeCardLike(e){return this._request(`https://around.nomoreparties.co/v1/groupId/cards/likes/${e}`,{method:"DELETE",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5"}})}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${JSON.stringify(e)}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"bb2f5d86-90ca-441b-9ac8-a1ee02058df5","Content-Type":"application/json"}});let B,w;I.getAppInfo().then((e=>{let[t,o]=e;w=o._id,B=new r({items:t,renderer:C},".cards__list"),B.renderItems()})).catch((e=>{console.error(e)})),h.addEventListener("click",(()=>{L.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,